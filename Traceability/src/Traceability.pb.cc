// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Traceability.proto

#include "Traceability.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace Traceability {
class IpfsTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IpfsTable> _instance;
} _IpfsTable_default_instance_;
class ProductTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProductTable> _instance;
} _ProductTable_default_instance_;
}  // namespace Traceability
static void InitDefaultsIpfsTable_Traceability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Traceability::_IpfsTable_default_instance_;
    new (ptr) ::Traceability::IpfsTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Traceability::IpfsTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IpfsTable_Traceability_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIpfsTable_Traceability_2eproto}, {}};

static void InitDefaultsProductTable_Traceability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Traceability::_ProductTable_default_instance_;
    new (ptr) ::Traceability::ProductTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Traceability::ProductTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProductTable_Traceability_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProductTable_Traceability_2eproto}, {}};

namespace Traceability {

// ===================================================================

void IpfsTable::InitAsDefaultInstance() {
}
class IpfsTable::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpfsTable::kIpfskeyFieldNumber;
const int IpfsTable::kOrgNoFieldNumber;
const int IpfsTable::kProductBatchNoFieldNumber;
const int IpfsTable::kProductCodeFieldNumber;
const int IpfsTable::kSubmitTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpfsTable::IpfsTable()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Traceability.IpfsTable)
}
IpfsTable::IpfsTable(const IpfsTable& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipfskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipfskey().size() > 0) {
    ipfskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipfskey_);
  }
  orgno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orgno().size() > 0) {
    orgno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgno_);
  }
  productbatchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productbatchno().size() > 0) {
    productbatchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productbatchno_);
  }
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productcode().size() > 0) {
    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  submittime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.submittime().size() > 0) {
    submittime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.submittime_);
  }
  // @@protoc_insertion_point(copy_constructor:Traceability.IpfsTable)
}

void IpfsTable::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IpfsTable_Traceability_2eproto.base);
  ipfskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IpfsTable::~IpfsTable() {
  // @@protoc_insertion_point(destructor:Traceability.IpfsTable)
  SharedDtor();
}

void IpfsTable::SharedDtor() {
  ipfskey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IpfsTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IpfsTable& IpfsTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IpfsTable_Traceability_2eproto.base);
  return *internal_default_instance();
}


void IpfsTable::Clear() {
// @@protoc_insertion_point(message_clear_start:Traceability.IpfsTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipfskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IpfsTable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IpfsTable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ipfskey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_ipfskey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string orgNo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_orgno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string productBatchNo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_productbatchno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string productCode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_productcode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string submitTime = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_submittime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IpfsTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Traceability.IpfsTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ipfskey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipfskey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipfskey().data(), static_cast<int>(this->ipfskey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.ipfskey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orgNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orgno().data(), static_cast<int>(this->orgno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.orgNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productBatchNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productbatchno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productbatchno().data(), static_cast<int>(this->productbatchno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.productBatchNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productcode().data(), static_cast<int>(this->productcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.productCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string submitTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_submittime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->submittime().data(), static_cast<int>(this->submittime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.submitTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Traceability.IpfsTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Traceability.IpfsTable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IpfsTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Traceability.IpfsTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ipfskey = 1;
  if (this->ipfskey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipfskey().data(), static_cast<int>(this->ipfskey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.ipfskey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipfskey(), output);
  }

  // string orgNo = 2;
  if (this->orgno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgno().data(), static_cast<int>(this->orgno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.orgNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->orgno(), output);
  }

  // string productBatchNo = 3;
  if (this->productbatchno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productbatchno().data(), static_cast<int>(this->productbatchno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.productBatchNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productbatchno(), output);
  }

  // string productCode = 4;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.productCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productcode(), output);
  }

  // string submitTime = 5;
  if (this->submittime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->submittime().data(), static_cast<int>(this->submittime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.submitTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->submittime(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:Traceability.IpfsTable)
}

size_t IpfsTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Traceability.IpfsTable)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ipfskey = 1;
  if (this->ipfskey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipfskey());
  }

  // string orgNo = 2;
  if (this->orgno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orgno());
  }

  // string productBatchNo = 3;
  if (this->productbatchno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productbatchno());
  }

  // string productCode = 4;
  if (this->productcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productcode());
  }

  // string submitTime = 5;
  if (this->submittime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->submittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IpfsTable::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IpfsTable*>(&from));
}

void IpfsTable::MergeFrom(const IpfsTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Traceability.IpfsTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipfskey().size() > 0) {

    ipfskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipfskey_);
  }
  if (from.orgno().size() > 0) {

    orgno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgno_);
  }
  if (from.productbatchno().size() > 0) {

    productbatchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productbatchno_);
  }
  if (from.productcode().size() > 0) {

    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.submittime().size() > 0) {

    submittime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.submittime_);
  }
}

void IpfsTable::CopyFrom(const IpfsTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Traceability.IpfsTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpfsTable::IsInitialized() const {
  return true;
}

void IpfsTable::Swap(IpfsTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpfsTable::InternalSwap(IpfsTable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ipfskey_.Swap(&other->ipfskey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  orgno_.Swap(&other->orgno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  productbatchno_.Swap(&other->productbatchno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  productcode_.Swap(&other->productcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  submittime_.Swap(&other->submittime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::std::string IpfsTable::GetTypeName() const {
  return "Traceability.IpfsTable";
}


// ===================================================================

void ProductTable::InitAsDefaultInstance() {
}
class ProductTable::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductTable::kProductkeyFieldNumber;
const int ProductTable::kAccountFieldNumber;
const int ProductTable::kAddressFieldNumber;
const int ProductTable::kBatchNoFieldNumber;
const int ProductTable::kConfirmFieldNumber;
const int ProductTable::kCreateTimeFieldNumber;
const int ProductTable::kIdFieldNumber;
const int ProductTable::kKeyFieldNumber;
const int ProductTable::kLatFieldNumber;
const int ProductTable::kLngFieldNumber;
const int ProductTable::kOrgIdFieldNumber;
const int ProductTable::kPicHashFieldNumber;
const int ProductTable::kPictureFieldNumber;
const int ProductTable::kRoleIdFieldNumber;
const int ProductTable::kRoleNameFieldNumber;
const int ProductTable::kStatusFieldNumber;
const int ProductTable::kSubmitTimeFieldNumber;
const int ProductTable::kTransactionIdFieldNumber;
const int ProductTable::kTypeFieldNumber;
const int ProductTable::kUpdateTimeFieldNumber;
const int ProductTable::kUploadTimesFieldNumber;
const int ProductTable::kUserIdFieldNumber;
const int ProductTable::kUserNameFieldNumber;
const int ProductTable::kUserUUIDFieldNumber;
const int ProductTable::kWorkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductTable::ProductTable()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Traceability.ProductTable)
}
ProductTable::ProductTable(const ProductTable& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productkey().size() > 0) {
    productkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productkey_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  batchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.batchno().size() > 0) {
    batchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.batchno_);
  }
  confirm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.confirm().size() > 0) {
    confirm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirm_);
  }
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.createtime().size() > 0) {
    createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  lat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lat().size() > 0) {
    lat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lat_);
  }
  lng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lng().size() > 0) {
    lng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lng_);
  }
  orgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orgid().size() > 0) {
    orgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgid_);
  }
  pichash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pichash().size() > 0) {
    pichash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pichash_);
  }
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.picture().size() > 0) {
    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  roleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roleid().size() > 0) {
    roleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roleid_);
  }
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.rolename().size() > 0) {
    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  submittime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.submittime().size() > 0) {
    submittime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.submittime_);
  }
  transactionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transactionid().size() > 0) {
    transactionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transactionid_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updatetime().size() > 0) {
    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  uploadtimes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uploadtimes().size() > 0) {
    uploadtimes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uploadtimes_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  useruuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.useruuid().size() > 0) {
    useruuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useruuid_);
  }
  work_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.work().size() > 0) {
    work_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.work_);
  }
  // @@protoc_insertion_point(copy_constructor:Traceability.ProductTable)
}

void ProductTable::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProductTable_Traceability_2eproto.base);
  productkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pichash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transactionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uploadtimes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useruuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  work_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProductTable::~ProductTable() {
  // @@protoc_insertion_point(destructor:Traceability.ProductTable)
  SharedDtor();
}

void ProductTable::SharedDtor() {
  productkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batchno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pichash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transactionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uploadtimes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useruuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  work_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProductTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProductTable& ProductTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProductTable_Traceability_2eproto.base);
  return *internal_default_instance();
}


void ProductTable::Clear() {
// @@protoc_insertion_point(message_clear_start:Traceability.ProductTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  productkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batchno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  confirm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pichash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transactionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uploadtimes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  useruuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  work_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProductTable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProductTable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string productkey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_productkey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_account();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string batchNo = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_batchno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string confirm = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_confirm();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string createTime = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_createtime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string id = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string key = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_key();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string lat = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_lat();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string lng = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_lng();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string orgId = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_orgid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string picHash = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_pichash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string picture = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_picture();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string roleId = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_roleid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string roleName = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_rolename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string status = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_status();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string submitTime = 17;
      case 17: {
        if (static_cast<::google::protobuf::uint8>(tag) != 138) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_submittime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string transactionId = 18;
      case 18: {
        if (static_cast<::google::protobuf::uint8>(tag) != 146) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_transactionid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string type = 19;
      case 19: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string updateTime = 20;
      case 20: {
        if (static_cast<::google::protobuf::uint8>(tag) != 162) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_updatetime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string uploadTimes = 21;
      case 21: {
        if (static_cast<::google::protobuf::uint8>(tag) != 170) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_uploadtimes();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string userId = 22;
      case 22: {
        if (static_cast<::google::protobuf::uint8>(tag) != 178) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_userid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string userName = 23;
      case 23: {
        if (static_cast<::google::protobuf::uint8>(tag) != 186) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string userUUID = 24;
      case 24: {
        if (static_cast<::google::protobuf::uint8>(tag) != 194) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_useruuid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string work = 25;
      case 25: {
        if (static_cast<::google::protobuf::uint8>(tag) != 202) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_work();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProductTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Traceability.ProductTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string productkey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productkey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productkey().data(), static_cast<int>(this->productkey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.productkey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string batchNo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_batchno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->batchno().data(), static_cast<int>(this->batchno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.batchNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string confirm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_confirm()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->confirm().data(), static_cast<int>(this->confirm().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.confirm"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string createTime = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createtime().data(), static_cast<int>(this->createtime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.createTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lat = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lat().data(), static_cast<int>(this->lat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.lat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lng = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lng()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lng().data(), static_cast<int>(this->lng().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.lng"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orgId = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orgid().data(), static_cast<int>(this->orgid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.orgId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string picHash = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pichash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pichash().data(), static_cast<int>(this->pichash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.picHash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string picture = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picture().data(), static_cast<int>(this->picture().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.picture"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string roleId = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roleid().data(), static_cast<int>(this->roleid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.roleId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string roleName = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rolename().data(), static_cast<int>(this->rolename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.roleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string submitTime = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (138 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_submittime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->submittime().data(), static_cast<int>(this->submittime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.submitTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transactionId = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (146 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transactionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transactionid().data(), static_cast<int>(this->transactionid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.transactionId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (154 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string updateTime = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (162 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatetime().data(), static_cast<int>(this->updatetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.updateTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uploadTimes = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (170 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uploadtimes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uploadtimes().data(), static_cast<int>(this->uploadtimes().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.uploadTimes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userId = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (178 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), static_cast<int>(this->userid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.userId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (186 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userUUID = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (194 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useruuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->useruuid().data(), static_cast<int>(this->useruuid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.userUUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string work = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (202 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_work()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->work().data(), static_cast<int>(this->work().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.work"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Traceability.ProductTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Traceability.ProductTable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProductTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Traceability.ProductTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productkey = 1;
  if (this->productkey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productkey().data(), static_cast<int>(this->productkey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.productkey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->productkey(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string address = 3;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->address(), output);
  }

  // string batchNo = 4;
  if (this->batchno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->batchno().data(), static_cast<int>(this->batchno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.batchNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->batchno(), output);
  }

  // string confirm = 5;
  if (this->confirm().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->confirm().data(), static_cast<int>(this->confirm().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.confirm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->confirm(), output);
  }

  // string createTime = 6;
  if (this->createtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createtime().data(), static_cast<int>(this->createtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.createTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->createtime(), output);
  }

  // string id = 7;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->id(), output);
  }

  // string key = 8;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->key(), output);
  }

  // string lat = 9;
  if (this->lat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lat().data(), static_cast<int>(this->lat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.lat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->lat(), output);
  }

  // string lng = 10;
  if (this->lng().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lng().data(), static_cast<int>(this->lng().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.lng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->lng(), output);
  }

  // string orgId = 11;
  if (this->orgid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgid().data(), static_cast<int>(this->orgid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.orgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->orgid(), output);
  }

  // string picHash = 12;
  if (this->pichash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pichash().data(), static_cast<int>(this->pichash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.picHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->pichash(), output);
  }

  // string picture = 13;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), static_cast<int>(this->picture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.picture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->picture(), output);
  }

  // string roleId = 14;
  if (this->roleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roleid().data(), static_cast<int>(this->roleid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.roleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->roleid(), output);
  }

  // string roleName = 15;
  if (this->rolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rolename().data(), static_cast<int>(this->rolename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.roleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->rolename(), output);
  }

  // string status = 16;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->status(), output);
  }

  // string submitTime = 17;
  if (this->submittime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->submittime().data(), static_cast<int>(this->submittime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.submitTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->submittime(), output);
  }

  // string transactionId = 18;
  if (this->transactionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transactionid().data(), static_cast<int>(this->transactionid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.transactionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->transactionid(), output);
  }

  // string type = 19;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->type(), output);
  }

  // string updateTime = 20;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.updateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->updatetime(), output);
  }

  // string uploadTimes = 21;
  if (this->uploadtimes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uploadtimes().data(), static_cast<int>(this->uploadtimes().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.uploadTimes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->uploadtimes(), output);
  }

  // string userId = 22;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), static_cast<int>(this->userid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.userId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->userid(), output);
  }

  // string userName = 23;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->username(), output);
  }

  // string userUUID = 24;
  if (this->useruuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->useruuid().data(), static_cast<int>(this->useruuid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.userUUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->useruuid(), output);
  }

  // string work = 25;
  if (this->work().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->work().data(), static_cast<int>(this->work().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.work");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->work(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:Traceability.ProductTable)
}

size_t ProductTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Traceability.ProductTable)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string productkey = 1;
  if (this->productkey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productkey());
  }

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string address = 3;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string batchNo = 4;
  if (this->batchno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->batchno());
  }

  // string confirm = 5;
  if (this->confirm().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->confirm());
  }

  // string createTime = 6;
  if (this->createtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createtime());
  }

  // string id = 7;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string key = 8;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string lat = 9;
  if (this->lat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lat());
  }

  // string lng = 10;
  if (this->lng().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lng());
  }

  // string orgId = 11;
  if (this->orgid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orgid());
  }

  // string picHash = 12;
  if (this->pichash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pichash());
  }

  // string picture = 13;
  if (this->picture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picture());
  }

  // string roleId = 14;
  if (this->roleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roleid());
  }

  // string roleName = 15;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rolename());
  }

  // string status = 16;
  if (this->status().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // string submitTime = 17;
  if (this->submittime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->submittime());
  }

  // string transactionId = 18;
  if (this->transactionid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transactionid());
  }

  // string type = 19;
  if (this->type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string updateTime = 20;
  if (this->updatetime().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  // string uploadTimes = 21;
  if (this->uploadtimes().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uploadtimes());
  }

  // string userId = 22;
  if (this->userid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string userName = 23;
  if (this->username().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string userUUID = 24;
  if (this->useruuid().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->useruuid());
  }

  // string work = 25;
  if (this->work().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->work());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProductTable::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProductTable*>(&from));
}

void ProductTable::MergeFrom(const ProductTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Traceability.ProductTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.productkey().size() > 0) {

    productkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productkey_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.batchno().size() > 0) {

    batchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.batchno_);
  }
  if (from.confirm().size() > 0) {

    confirm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.confirm_);
  }
  if (from.createtime().size() > 0) {

    createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.lat().size() > 0) {

    lat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lat_);
  }
  if (from.lng().size() > 0) {

    lng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lng_);
  }
  if (from.orgid().size() > 0) {

    orgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgid_);
  }
  if (from.pichash().size() > 0) {

    pichash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pichash_);
  }
  if (from.picture().size() > 0) {

    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  if (from.roleid().size() > 0) {

    roleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roleid_);
  }
  if (from.rolename().size() > 0) {

    rolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rolename_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.submittime().size() > 0) {

    submittime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.submittime_);
  }
  if (from.transactionid().size() > 0) {

    transactionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transactionid_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.updatetime().size() > 0) {

    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.uploadtimes().size() > 0) {

    uploadtimes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uploadtimes_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.useruuid().size() > 0) {

    useruuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useruuid_);
  }
  if (from.work().size() > 0) {

    work_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.work_);
  }
}

void ProductTable::CopyFrom(const ProductTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Traceability.ProductTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductTable::IsInitialized() const {
  return true;
}

void ProductTable::Swap(ProductTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductTable::InternalSwap(ProductTable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  productkey_.Swap(&other->productkey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  batchno_.Swap(&other->batchno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  confirm_.Swap(&other->confirm_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  createtime_.Swap(&other->createtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lat_.Swap(&other->lat_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lng_.Swap(&other->lng_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  orgid_.Swap(&other->orgid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pichash_.Swap(&other->pichash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  picture_.Swap(&other->picture_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  roleid_.Swap(&other->roleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  rolename_.Swap(&other->rolename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  submittime_.Swap(&other->submittime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transactionid_.Swap(&other->transactionid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  updatetime_.Swap(&other->updatetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uploadtimes_.Swap(&other->uploadtimes_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  userid_.Swap(&other->userid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  useruuid_.Swap(&other->useruuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  work_.Swap(&other->work_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::std::string ProductTable::GetTypeName() const {
  return "Traceability.ProductTable";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Traceability
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Traceability::IpfsTable* Arena::CreateMaybeMessage< ::Traceability::IpfsTable >(Arena* arena) {
  return Arena::CreateInternal< ::Traceability::IpfsTable >(arena);
}
template<> PROTOBUF_NOINLINE ::Traceability::ProductTable* Arena::CreateMaybeMessage< ::Traceability::ProductTable >(Arena* arena) {
  return Arena::CreateInternal< ::Traceability::ProductTable >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
