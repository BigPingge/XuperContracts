// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Traceability.proto

#include "Traceability.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace Traceability {
class IpfsTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IpfsTable> _instance;
} _IpfsTable_default_instance_;
class ProductTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProductTable> _instance;
} _ProductTable_default_instance_;
}  // namespace Traceability
static void InitDefaultsIpfsTable_Traceability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Traceability::_IpfsTable_default_instance_;
    new (ptr) ::Traceability::IpfsTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Traceability::IpfsTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IpfsTable_Traceability_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIpfsTable_Traceability_2eproto}, {}};

static void InitDefaultsProductTable_Traceability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Traceability::_ProductTable_default_instance_;
    new (ptr) ::Traceability::ProductTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Traceability::ProductTable::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProductTable_Traceability_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProductTable_Traceability_2eproto}, {}};

namespace Traceability {

// ===================================================================

void IpfsTable::InitAsDefaultInstance() {
}
class IpfsTable::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpfsTable::kIpfskeyFieldNumber;
const int IpfsTable::kOrgNoFieldNumber;
const int IpfsTable::kProductBatchNoFieldNumber;
const int IpfsTable::kProductCodeFieldNumber;
const int IpfsTable::kSubmitTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpfsTable::IpfsTable()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Traceability.IpfsTable)
}
IpfsTable::IpfsTable(const IpfsTable& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ipfskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ipfskey().size() > 0) {
    ipfskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipfskey_);
  }
  orgno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orgno().size() > 0) {
    orgno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgno_);
  }
  productbatchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productbatchno().size() > 0) {
    productbatchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productbatchno_);
  }
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productcode().size() > 0) {
    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  submittime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.submittime().size() > 0) {
    submittime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.submittime_);
  }
  // @@protoc_insertion_point(copy_constructor:Traceability.IpfsTable)
}

void IpfsTable::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_IpfsTable_Traceability_2eproto.base);
  ipfskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IpfsTable::~IpfsTable() {
  // @@protoc_insertion_point(destructor:Traceability.IpfsTable)
  SharedDtor();
}

void IpfsTable::SharedDtor() {
  ipfskey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IpfsTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IpfsTable& IpfsTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_IpfsTable_Traceability_2eproto.base);
  return *internal_default_instance();
}


void IpfsTable::Clear() {
// @@protoc_insertion_point(message_clear_start:Traceability.IpfsTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ipfskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orgno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submittime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* IpfsTable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<IpfsTable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string ipfskey = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_ipfskey();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string orgNo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_orgno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string productBatchNo = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_productbatchno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string productCode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_productcode();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string submitTime = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_submittime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool IpfsTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Traceability.IpfsTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ipfskey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ipfskey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ipfskey().data(), static_cast<int>(this->ipfskey().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.ipfskey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string orgNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orgno().data(), static_cast<int>(this->orgno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.orgNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productBatchNo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productbatchno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productbatchno().data(), static_cast<int>(this->productbatchno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.productBatchNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productcode().data(), static_cast<int>(this->productcode().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.productCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string submitTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_submittime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->submittime().data(), static_cast<int>(this->submittime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.IpfsTable.submitTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Traceability.IpfsTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Traceability.IpfsTable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void IpfsTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Traceability.IpfsTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ipfskey = 1;
  if (this->ipfskey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ipfskey().data(), static_cast<int>(this->ipfskey().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.ipfskey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ipfskey(), output);
  }

  // string orgNo = 2;
  if (this->orgno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgno().data(), static_cast<int>(this->orgno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.orgNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->orgno(), output);
  }

  // string productBatchNo = 3;
  if (this->productbatchno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productbatchno().data(), static_cast<int>(this->productbatchno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.productBatchNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->productbatchno(), output);
  }

  // string productCode = 4;
  if (this->productcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productcode().data(), static_cast<int>(this->productcode().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.productCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->productcode(), output);
  }

  // string submitTime = 5;
  if (this->submittime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->submittime().data(), static_cast<int>(this->submittime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.IpfsTable.submitTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->submittime(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:Traceability.IpfsTable)
}

size_t IpfsTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Traceability.IpfsTable)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ipfskey = 1;
  if (this->ipfskey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ipfskey());
  }

  // string orgNo = 2;
  if (this->orgno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orgno());
  }

  // string productBatchNo = 3;
  if (this->productbatchno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productbatchno());
  }

  // string productCode = 4;
  if (this->productcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productcode());
  }

  // string submitTime = 5;
  if (this->submittime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->submittime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IpfsTable::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const IpfsTable*>(&from));
}

void IpfsTable::MergeFrom(const IpfsTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Traceability.IpfsTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ipfskey().size() > 0) {

    ipfskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ipfskey_);
  }
  if (from.orgno().size() > 0) {

    orgno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgno_);
  }
  if (from.productbatchno().size() > 0) {

    productbatchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productbatchno_);
  }
  if (from.productcode().size() > 0) {

    productcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productcode_);
  }
  if (from.submittime().size() > 0) {

    submittime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.submittime_);
  }
}

void IpfsTable::CopyFrom(const IpfsTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Traceability.IpfsTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IpfsTable::IsInitialized() const {
  return true;
}

void IpfsTable::Swap(IpfsTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpfsTable::InternalSwap(IpfsTable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  ipfskey_.Swap(&other->ipfskey_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  orgno_.Swap(&other->orgno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  productbatchno_.Swap(&other->productbatchno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  productcode_.Swap(&other->productcode_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  submittime_.Swap(&other->submittime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::std::string IpfsTable::GetTypeName() const {
  return "Traceability.IpfsTable";
}


// ===================================================================

void ProductTable::InitAsDefaultInstance() {
}
class ProductTable::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProductTable::kOrgNoFieldNumber;
const int ProductTable::kProductBatchNoFieldNumber;
const int ProductTable::kFilesHashFieldNumber;
const int ProductTable::kFileTypeFieldNumber;
const int ProductTable::kAddressFieldNumber;
const int ProductTable::kLatFieldNumber;
const int ProductTable::kLngFieldNumber;
const int ProductTable::kCreateTimeFieldNumber;
const int ProductTable::kUpdateTimeFieldNumber;
const int ProductTable::kPinfoRecordIdFieldNumber;
const int ProductTable::kPaccountFieldNumber;
const int ProductTable::kPuserIdFieldNumber;
const int ProductTable::kProleNameFieldNumber;
const int ProductTable::kPremarkFieldNumber;
const int ProductTable::kProleIdFieldNumber;
const int ProductTable::kPuserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProductTable::ProductTable()
  : ::google::protobuf::MessageLite(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Traceability.ProductTable)
}
ProductTable::ProductTable(const ProductTable& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  orgno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.orgno().size() > 0) {
    orgno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgno_);
  }
  productbatchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.productbatchno().size() > 0) {
    productbatchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productbatchno_);
  }
  fileshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fileshash().size() > 0) {
    fileshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileshash_);
  }
  filetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filetype().size() > 0) {
    filetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  lat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lat().size() > 0) {
    lat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lat_);
  }
  lng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lng().size() > 0) {
    lng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lng_);
  }
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.createtime().size() > 0) {
    createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updatetime().size() > 0) {
    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  pinforecordid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pinforecordid().size() > 0) {
    pinforecordid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pinforecordid_);
  }
  paccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.paccount().size() > 0) {
    paccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paccount_);
  }
  puserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.puserid().size() > 0) {
    puserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.puserid_);
  }
  prolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prolename().size() > 0) {
    prolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prolename_);
  }
  premark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.premark().size() > 0) {
    premark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.premark_);
  }
  proleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proleid().size() > 0) {
    proleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proleid_);
  }
  pusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pusername().size() > 0) {
    pusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pusername_);
  }
  // @@protoc_insertion_point(copy_constructor:Traceability.ProductTable)
}

void ProductTable::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ProductTable_Traceability_2eproto.base);
  orgno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileshash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lng_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pinforecordid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puserid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prolename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  premark_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ProductTable::~ProductTable() {
  // @@protoc_insertion_point(destructor:Traceability.ProductTable)
  SharedDtor();
}

void ProductTable::SharedDtor() {
  orgno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileshash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lng_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pinforecordid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puserid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prolename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  premark_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProductTable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProductTable& ProductTable::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ProductTable_Traceability_2eproto.base);
  return *internal_default_instance();
}


void ProductTable::Clear() {
// @@protoc_insertion_point(message_clear_start:Traceability.ProductTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orgno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  productbatchno_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileshash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updatetime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pinforecordid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  puserid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prolename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  premark_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ProductTable::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ProductTable*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string orgNo = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_orgno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string productBatchNo = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_productbatchno();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string filesHash = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_fileshash();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string fileType = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_filetype();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string address = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_address();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string lat = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_lat();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string lng = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_lng();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string createTime = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_createtime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string updateTime = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_updatetime();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string pinfoRecordId = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_pinforecordid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string paccount = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_paccount();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string puserId = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_puserid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string proleName = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_prolename();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string premark = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) != 114) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_premark();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string proleId = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) != 122) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_proleid();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // string puserName = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) != 130) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName(nullptr);
        object = msg->mutable_pusername();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ProductTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:Traceability.ProductTable)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string orgNo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_orgno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->orgno().data(), static_cast<int>(this->orgno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.orgNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string productBatchNo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productbatchno()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->productbatchno().data(), static_cast<int>(this->productbatchno().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.productBatchNo"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filesHash = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fileshash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fileshash().data(), static_cast<int>(this->fileshash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.filesHash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fileType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filetype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filetype().data(), static_cast<int>(this->filetype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.fileType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lat = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lat().data(), static_cast<int>(this->lat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.lat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string lng = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lng()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lng().data(), static_cast<int>(this->lng().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.lng"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string createTime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createtime().data(), static_cast<int>(this->createtime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.createTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string updateTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updatetime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updatetime().data(), static_cast<int>(this->updatetime().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.updateTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pinfoRecordId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pinforecordid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pinforecordid().data(), static_cast<int>(this->pinforecordid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.pinfoRecordId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string paccount = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paccount()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->paccount().data(), static_cast<int>(this->paccount().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.paccount"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string puserId = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_puserid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->puserid().data(), static_cast<int>(this->puserid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.puserId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proleName = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prolename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prolename().data(), static_cast<int>(this->prolename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.proleName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string premark = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (114 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_premark()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->premark().data(), static_cast<int>(this->premark().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.premark"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proleId = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (122 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proleid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proleid().data(), static_cast<int>(this->proleid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.proleId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string puserName = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (130 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pusername()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pusername().data(), static_cast<int>(this->pusername().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Traceability.ProductTable.puserName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Traceability.ProductTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Traceability.ProductTable)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ProductTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Traceability.ProductTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string orgNo = 1;
  if (this->orgno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->orgno().data(), static_cast<int>(this->orgno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.orgNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->orgno(), output);
  }

  // string productBatchNo = 2;
  if (this->productbatchno().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->productbatchno().data(), static_cast<int>(this->productbatchno().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.productBatchNo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productbatchno(), output);
  }

  // string filesHash = 3;
  if (this->fileshash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fileshash().data(), static_cast<int>(this->fileshash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.filesHash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fileshash(), output);
  }

  // string fileType = 4;
  if (this->filetype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filetype().data(), static_cast<int>(this->filetype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.fileType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filetype(), output);
  }

  // string address = 5;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->address(), output);
  }

  // string lat = 6;
  if (this->lat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lat().data(), static_cast<int>(this->lat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.lat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->lat(), output);
  }

  // string lng = 7;
  if (this->lng().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lng().data(), static_cast<int>(this->lng().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.lng");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->lng(), output);
  }

  // string createTime = 8;
  if (this->createtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createtime().data(), static_cast<int>(this->createtime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.createTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->createtime(), output);
  }

  // string updateTime = 9;
  if (this->updatetime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updatetime().data(), static_cast<int>(this->updatetime().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.updateTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->updatetime(), output);
  }

  // string pinfoRecordId = 10;
  if (this->pinforecordid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pinforecordid().data(), static_cast<int>(this->pinforecordid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.pinfoRecordId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pinforecordid(), output);
  }

  // string paccount = 11;
  if (this->paccount().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->paccount().data(), static_cast<int>(this->paccount().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.paccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->paccount(), output);
  }

  // string puserId = 12;
  if (this->puserid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->puserid().data(), static_cast<int>(this->puserid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.puserId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->puserid(), output);
  }

  // string proleName = 13;
  if (this->prolename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prolename().data(), static_cast<int>(this->prolename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.proleName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->prolename(), output);
  }

  // string premark = 14;
  if (this->premark().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->premark().data(), static_cast<int>(this->premark().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.premark");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->premark(), output);
  }

  // string proleId = 15;
  if (this->proleid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proleid().data(), static_cast<int>(this->proleid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.proleId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->proleid(), output);
  }

  // string puserName = 16;
  if (this->pusername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pusername().data(), static_cast<int>(this->pusername().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Traceability.ProductTable.puserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->pusername(), output);
  }

  output->WriteRaw(_internal_metadata_.unknown_fields().data(),
                   static_cast<int>(_internal_metadata_.unknown_fields().size()));
  // @@protoc_insertion_point(serialize_end:Traceability.ProductTable)
}

size_t ProductTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Traceability.ProductTable)
  size_t total_size = 0;

  total_size += _internal_metadata_.unknown_fields().size();

  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string orgNo = 1;
  if (this->orgno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->orgno());
  }

  // string productBatchNo = 2;
  if (this->productbatchno().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->productbatchno());
  }

  // string filesHash = 3;
  if (this->fileshash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fileshash());
  }

  // string fileType = 4;
  if (this->filetype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filetype());
  }

  // string address = 5;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string lat = 6;
  if (this->lat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lat());
  }

  // string lng = 7;
  if (this->lng().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lng());
  }

  // string createTime = 8;
  if (this->createtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createtime());
  }

  // string updateTime = 9;
  if (this->updatetime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updatetime());
  }

  // string pinfoRecordId = 10;
  if (this->pinforecordid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pinforecordid());
  }

  // string paccount = 11;
  if (this->paccount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paccount());
  }

  // string puserId = 12;
  if (this->puserid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->puserid());
  }

  // string proleName = 13;
  if (this->prolename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prolename());
  }

  // string premark = 14;
  if (this->premark().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->premark());
  }

  // string proleId = 15;
  if (this->proleid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proleid());
  }

  // string puserName = 16;
  if (this->pusername().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pusername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProductTable::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ProductTable*>(&from));
}

void ProductTable::MergeFrom(const ProductTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Traceability.ProductTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.orgno().size() > 0) {

    orgno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orgno_);
  }
  if (from.productbatchno().size() > 0) {

    productbatchno_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productbatchno_);
  }
  if (from.fileshash().size() > 0) {

    fileshash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileshash_);
  }
  if (from.filetype().size() > 0) {

    filetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filetype_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.lat().size() > 0) {

    lat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lat_);
  }
  if (from.lng().size() > 0) {

    lng_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lng_);
  }
  if (from.createtime().size() > 0) {

    createtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createtime_);
  }
  if (from.updatetime().size() > 0) {

    updatetime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updatetime_);
  }
  if (from.pinforecordid().size() > 0) {

    pinforecordid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pinforecordid_);
  }
  if (from.paccount().size() > 0) {

    paccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paccount_);
  }
  if (from.puserid().size() > 0) {

    puserid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.puserid_);
  }
  if (from.prolename().size() > 0) {

    prolename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prolename_);
  }
  if (from.premark().size() > 0) {

    premark_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.premark_);
  }
  if (from.proleid().size() > 0) {

    proleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proleid_);
  }
  if (from.pusername().size() > 0) {

    pusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pusername_);
  }
}

void ProductTable::CopyFrom(const ProductTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Traceability.ProductTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductTable::IsInitialized() const {
  return true;
}

void ProductTable::Swap(ProductTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProductTable::InternalSwap(ProductTable* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  orgno_.Swap(&other->orgno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  productbatchno_.Swap(&other->productbatchno_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fileshash_.Swap(&other->fileshash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filetype_.Swap(&other->filetype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lat_.Swap(&other->lat_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  lng_.Swap(&other->lng_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  createtime_.Swap(&other->createtime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  updatetime_.Swap(&other->updatetime_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pinforecordid_.Swap(&other->pinforecordid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  paccount_.Swap(&other->paccount_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  puserid_.Swap(&other->puserid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  prolename_.Swap(&other->prolename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  premark_.Swap(&other->premark_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proleid_.Swap(&other->proleid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pusername_.Swap(&other->pusername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::std::string ProductTable::GetTypeName() const {
  return "Traceability.ProductTable";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Traceability
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::Traceability::IpfsTable* Arena::CreateMaybeMessage< ::Traceability::IpfsTable >(Arena* arena) {
  return Arena::CreateInternal< ::Traceability::IpfsTable >(arena);
}
template<> PROTOBUF_NOINLINE ::Traceability::ProductTable* Arena::CreateMaybeMessage< ::Traceability::ProductTable >(Arena* arena) {
  return Arena::CreateInternal< ::Traceability::ProductTable >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
